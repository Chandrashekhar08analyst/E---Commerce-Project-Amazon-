                          -- SQL Tasks & Queries for the Project --

-- 1. Sales Trends Analysis: 


-- (A). Monthly Sales:
WITH
	MONTHLY_SALES AS (
		SELECT
			EXTRACT(
				MONTH
				FROM
					ORDER_DATE
			) AS MONTH,
			TO_CHAR(ORDER_DATE, 'month') AS MONTH_NAME,
			SUM(TOTAL_PRICE) AS SALES_BY_MONTH
		FROM
			ORDERS
		GROUP BY
			MONTH,
			MONTH_NAME
		ORDER BY
			MONTH
	)
SELECT
	MONTH_NAME,
	SALES_BY_MONTH
FROM
	MONTHLY_SALES;

-- (B). Top Categories:
WITH
	TOP_CATEGORY AS (
		SELECT
			P.CATEGORY,
			SUM(O.TOTAL_PRICE) AS SALES_BY_CATEGORY,
			COUNT(ORDER_ID) AS TOTAL_ORDERS
		FROM
			PRODUCTS AS P
			INNER JOIN ORDERS AS O ON P.PRODUCT_ID = O.PRODUCT_ID
		GROUP BY
			P.CATEGORY
		ORDER BY
			SALES_BY_CATEGORY DESC
	)
SELECT
	CATEGORY,
	SALES_BY_CATEGORY
FROM
	TOP_CATEGORY;


-- Customer Behavior Analysis:

-- (A). Customer Purchase Frequency:
WITH
	CUSTOMER_FREQUENCY AS (
		SELECT
			C.CUSTOMER_ID,
			C.NAME AS CUSTOMER_NAME,
			COUNT(O.ORDER_ID) AS FREQUENCY
		FROM
			CUSTOMERS AS C
			JOIN ORDERS AS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
		GROUP BY
			C.CUSTOMER_ID,
			CUSTOMER_NAME
		ORDER BY
			COUNT(O.ORDER_ID) DESC
	)
SELECT
	CUSTOMER_NAME,
	FREQUENCY
FROM
	CUSTOMER_FREQUENCY;


-- (B). Top 5 customer who increase sales
WITH
	TOP_CUSTOMERS AS (
		SELECT
			C.NAME AS CUSTOMER_NAME,
			SUM(O.TOTAL_PRICE) AS CUSTOMER_SALES,
			ROW_NUMBER() OVER (
				ORDER BY
					SUM(O.TOTAL_PRICE) DESC
			) AS ROW_NUM
		FROM
			CUSTOMERS AS C
			JOIN ORDERS AS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
		GROUP BY
			CUSTOMER_NAME
		ORDER BY
			CUSTOMER_SALES DESC
	)
SELECT
	CUSTOMER_NAME,
	CUSTOMER_SALES
FROM
	TOP_CUSTOMERS
WHERE
	ROW_NUM <= 5;


-- (C). RFM Analysis (Recency, Frequency, Monetary):
SELECT
	CUSTOMER_ID,
	MAX(ORDER_DATE) AS LAST_PURCHASE_DATE,
	COUNT(ORDER_ID) AS FREQUENCY,
	SUM(TOTAL_PRICE) AS MONETARY_VALUE
FROM
	ORDERS
GROUP BY
	CUSTOMER_ID
ORDER BY
	MONETARY_VALUE DESC;


-- Product Performance Analysis:

-- (A). Top Product:
WITH
	TOP_PRODUCT AS (
		SELECT
			P.PRODUCT_NAME,
			SUM(O.TOTAL_PRICE) AS TOTAL_SALES
		FROM
			PRODUCTS AS P
			JOIN ORDERS AS O ON P.PRODUCT_ID = O.PRODUCT_ID
		GROUP BY
			P.PRODUCT_NAME
		ORDER BY
			TOTAL_SALES DESC
	)
SELECT
	*
FROM
	TOP_PRODUCT
LIMIT
	10;

-- (B). Return Rate by Product:
SELECT
	P.PRODUCT_ID,
	P.PRODUCT_NAME AS PRODUCT_NAME,
	COUNT(R.REVIEW_ID) AS TOTAL_REVIEWS,
	SUM(
		CASE
			WHEN R.RATING <= 2 THEN 1
			ELSE 0
		END
	) AS NAGATIVE_REVIEW
FROM
	PRODUCTS AS P
	JOIN ORDERS AS O ON P.PRODUCT_ID = O.PRODUCT_ID
	JOIN REVIEWS AS R ON R.CUSTOMER_ID = O.CUSTOMER_ID
GROUP BY
	P.PRODUCT_ID,
	P.PRODUCT_NAME
ORDER BY
	NAGATIVE_REVIEW DESC
LIMIT
	10;


-- Region-Based Sales Analysis:

-- (A).Sales by Region:
WITH
	REGION_ANALYSIS AS (
		SELECT
			C.LOCATION AS REGION,
			SUM(O.TOTAL_PRICE) AS SALES_BY_REGION
		FROM
			CUSTOMERS AS C
			JOIN ORDERS AS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
		GROUP BY
			REGION
		ORDER BY
			SALES_BY_REGION DESC
	)
SELECT
	*
FROM
	REGION_ANALYSIS
LIMIT
	10;